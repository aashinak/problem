# -*- coding: utf-8 -*-
"""fn1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ur4iUWTGQl0W6pohZRDLVtKwbods-CBT
"""

a = int(input("Enter the number:"))
b = int(input('Enter limit:'))
def multi(tab,lim):
  c=0
  for i in range(1,lim+1):
    c = tab*i
    print(i,'x',tab,'=',c)
multi(a,b)

n = int(input('Enter the number:'))
def fact(num):
  f=1
  for i in range(1,n+1):
   f=f*i
  return f
print('Factorial of',n,'=',fact(n))

def fact(num):
  if num==1:
    return 1
  else:
    return num*fact(num-1)
num = int(input('Enter the number:'))
fact(num)

def sum(num):
  if num==0:
    return 0
  else:
    return num%10 + sum(num//10) 
num = int(input('Enter the number:'))
sum(num)

def add(a,b):
  return a+b
#a = int(input('enter a:'))
#b = int(input('enter b:'))
print(add(1,2))
add(2,3)
add(3,4)
add(4,5)
add(5,6)

def sum(a,s):
  if a<0:
    return s
  elif(a%2==0):
    s+=a
    return sum(a-2,s)
  else:
    a= a-1
    s+=a
    return sum(a-2,s)
sum(22,0)

Abstraction is the process of hiding the internal details of an application from the outer world. Abstraction is used to describe things in simple terms. It's used to create a boundary between the application and the client programs

key characteristics using object and class

class person:
  def __init__(self,name,age):
    self.name= name
    self.age= age
  def display(self):
    print(self.name,self.age)
p1 = person('steve',10)
#print(p1.name)
#print(p1.age)
p1.display()